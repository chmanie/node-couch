// Generated by CoffeeScript 1.4.0
(function() {
  var Couch, getKeyString, request;

  request = require('request');

  getKeyString = function(key) {
    var keystr, squotes;
    if (typeof key === 'string') {
      squotes = '%22';
    } else {
      squotes = '';
    }
    return keystr = '?key=' + squotes + key + squotes;
  };

  Couch = (function() {

    function Couch(hostname, db, design) {
      this.hostname = hostname;
      this.db = db;
      this.design = design;
      this.dbroot = this.hostname + '/' + this.db;
    }

    Couch.prototype.view = function(options, callback) {
      var keystr;
      if (options.key != null) {
        keystr = getKeyString(options.key);
      } else {
        keystr = '';
      }
      return request({
        url: this.dbroot + '/_design/' + this.design + '/_view/' + options.view + keystr,
        method: 'GET',
        json: true
      }, function(err, res, body) {
        if (!err) {
          if (body.error != null) {
            return callback(body);
          } else {
            return callback(null, body.rows);
          }
        } else {
          return callback('could not connect to database!');
        }
      });
    };

    Couch.prototype.list = function(options, callback) {
      var keystr;
      if (options.key != null) {
        keystr = getKeyString(options.key);
      } else {
        keystr = '';
      }
      return request({
        url: this.dbroot + '/_design/' + this.design + '/_list/' + options.list + '/' + options.view + keystr,
        method: 'GET',
        json: true
      }, function(err, res, body) {
        if (!err) {
          if (body.error != null) {
            return callback(body);
          } else {
            return callback(null, body);
          }
        } else {
          return callback('could not connect to database!');
        }
      });
    };

    Couch.prototype.doc = function(docid, callback) {
      return request({
        url: this.dbroot + '/' + docid,
        method: 'GET',
        json: true
      }, function(err, res, body) {
        if (!err) {
          if (body.error != null) {
            return callback(body);
          } else {
            return callback(null, body);
          }
        } else {
          return callback('could not connect to database!');
        }
      });
    };

    Couch.prototype.saveDoc = function(doc, callback) {
      var id, reqmethod;
      if (doc._id != null) {
        reqmethod = 'PUT';
        id = doc._id;
      } else {
        reqmethod = 'POST';
        id = '';
      }
      return request({
        url: this.dbroot + '/' + id,
        method: reqmethod,
        json: true,
        body: doc
      }, function(err, res, body) {
        if (!err) {
          if (body.error != null) {
            return callback(body);
          } else {
            return callback(null, body);
          }
        } else {
          return callback('could not connect to database!');
        }
      });
    };

    Couch.prototype.removeDoc = function(doc, callback) {
      if ((doc._id != null) && (doc._rev != null)) {
        return request({
          url: this.dbroot + '/' + doc._id + '?rev=' + doc._rev,
          method: 'DELETE',
          json: true
        }, function(err, res, body) {
          if (!err) {
            if (body.error != null) {
              return callback(body);
            } else {
              return callback(null, body);
            }
          } else {
            return callback('could not connect to database!');
          }
        });
      }
    };

    Couch.prototype.attachment = function(docid, filename) {
      var attach;
      attach = request({
        method: 'GET',
        url: this.dbroot + '/' + docid + '/' + filename
      });
      return attach;
    };

    return Couch;

  })();

  module.exports = Couch;

}).call(this);
